<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on Manos Nikolaidis</title><link>https://shadowmanos.github.io/tutorials/</link><description>Recent content in Tutorials on Manos Nikolaidis</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><atom:link href="https://shadowmanos.github.io/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>File operations</title><link>https://shadowmanos.github.io/tutorials/processingfiles/fileoperations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shadowmanos.github.io/tutorials/processingfiles/fileoperations/</guid><description>Pre-filing We&amp;rsquo;ll see some simple one line examples on operations on files themselves without modifying contents. We&amp;rsquo;ll just use standard Java classes. To run these commands make sure you have installed j&amp;rsquo;bang and then at your terminal do:
jbang -i https://github.com/shadowmanos/shadowmanos.github.io/blob/main/content/tutorials/processingFiles/fileOperations.jsh List folders and files First step is always to create a Path that represents a path to a file or folder, and in many ways supersedes the older File class.</description></item><item><title>File Processing</title><link>https://shadowmanos.github.io/tutorials/processingfiles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shadowmanos.github.io/tutorials/processingfiles/</guid><description>Use Java to programmatically and interactively manage and modify files and folders. Unbeknownst to outsiders, this is a big part of data science work!
Tutorials Operations on files</description></item><item><title>Natural Language Processing</title><link>https://shadowmanos.github.io/tutorials/naturallanguage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shadowmanos.github.io/tutorials/naturallanguage/</guid><description>Use Java to programmatically analyse the grammar of plain English text i.e. Natural Language Processing or programmatically create text in English i.e. Natural Language Generation or classify various pieces of text according to some criteria i.e. Text Categorisation.
All text samples used here are Star Trek quotes (in English, not Klingon) sourced from either Wikipedia or Memory Alpha. After an entirely unscientific thought process, I decided such quotes are grammatically correct, adequately diverse and of average complexity.</description></item><item><title>Play with Stanford CoreNLP's Simple API</title><link>https://shadowmanos.github.io/tutorials/naturallanguage/corennlpintro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://shadowmanos.github.io/tutorials/naturallanguage/corennlpintro/</guid><description>Core what now? CoreNLP is a Natural Language Processing library written in Java by some lovely people at Stanford University and available under a GPL or commercial license. You can build Java applications with it, use it through a REST API from any language or invoke through your OS command line. CoreNLP recently introduced an alternative Simple API which is simple and concise and ideal for a REPL. To run these commands make sure you have installed j&amp;rsquo;bang and then at your terminal do:</description></item></channel></rss>